module.exports = {
  env: {
    browser: true,
    es6: true,
    node: false,
  },
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
  ],
  ignorePatterns: [
    "./*.js",
    "scripts/**/*",
    "src/**/*/*.scss.d.ts",
    "src/**/*/*.css.d.ts",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: "module",
    project: "./tsconfig.json",
  },
  settings: {
    react: {
      version: "detect",
    },
  },
  plugins: ["jsx-a11y", "import", "react", "react-hooks", "@typescript-eslint"],
  rules: {
    "react/prop-types": "off",
    "react/display-name": "off",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/brace-style": ["error", "1tbs"],
    "@typescript-eslint/consistent-type-assertions": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/explicit-function-return-type": [
      "off",
      {
        allowExpressions: true,
      },
    ],
    // TODO
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // TODO: turn on later
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        multiline: {
          delimiter: "semi",
          requireLast: true,
        },
        singleline: {
          delimiter: "semi",
          requireLast: false,
        },
      },
    ],
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-parens": ["off"],
    // Conflicts with Prettier on this: headers: { ...(token ? { Authorization: "Bearer " + token } : {}) },
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-magic-numbers": [
      "off",
      {
        enforceConst: true,
        ignore: [0, -1, 1, 2, 60, 1000],
        ignoreEnums: true,
        ignoreNumericLiteralTypes: true,
        ignoreReadonlyClassProperties: true,
      },
    ],
    // TODO: turn on later
    "@typescript-eslint/no-parameter-properties": "off",
    // TODO: turn on later
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    "no-unused-vars": "off",
    // Should be disabled to make @typescript-eslint/no-unused-vars work correctly
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        argsIgnorePattern: "^_",
        varsIgnorePattern: "^_",
      },
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-readonly": "off",
    "@typescript-eslint/quotes": [
      "off", // Conflicts with Prettier
      "double",
      {
        allowTemplateLiterals: true,
      },
    ],
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/unified-signatures": "error",
    "array-bracket-newline": "off",
    "arrow-body-style": ["off"],
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": "error",
    "block-scoped-var": "error",
    "class-methods-use-this": "off",
    "comma-dangle": ["error", "never"],
    "comma-style": ["error", "last"],
    complexity: [
      "off",
      {
        max: 10,
      },
    ],
    // TODO: turn on later
    "constructor-super": "error",
    curly: ["error", "all"],
    "default-case": "error",
    "dot-notation": "off",
    "eol-last": "error",
    eqeqeq: ["error", "smart"],
    "generator-star-spacing": ["error", "after"],
    "guard-for-in": "off",
    // TODO: turn on later
    "id-blacklist": [
      "error",
      "any",
      "number",
      "string",
      "boolean",
      "Undefined",
    ],
    "id-match": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-internal-modules": "off",
    "import/no-unresolved": "off",
    "import/order": "off",
    indent: "off",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "max-classes-per-file": ["off", 1],
    // TODO: turn on later
    "max-len": [
      "error",
      {
        code: 160,
      },
    ],
    "new-parens": "error",
    "newline-after-var": "off",
    "newline-before-return": "off",
    "newline-per-chained-call": "off",
    // conflicts with Prettier
    "no-alert": "off",
    "no-bitwise": "off",
    "no-case-declarations": "off",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-confusing-arrow": "off",
    "no-console": "off",
    // TODO: turn on later
    "no-constant-condition": "off",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-duplicate-imports": [
      "error",
      {
        includeExports: true,
      },
    ],
    "no-else-return": [
      "error",
      {
        allowElseIf: false,
      },
    ],
    "no-empty": "error",
    "no-eval": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-implicit-coercion": "off",
    "no-invalid-regexp": "error",
    "no-invalid-this": "off",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "warn",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-new": "error",
    "no-octal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "off",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-syntax": ["off", "ForInStatement"],
    // TODO: turn on later
    "no-return-await": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": [
      "off",
      {
        builtinGlobals: true,
        hoist: "all",
      },
    ],
    // TODO: turn on later
    "no-tabs": [
      "off",
      {
        allowIndentationTabs: true,
      },
    ],
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": "off",
    "no-unused-labels": "error",
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "off",
    "no-var-keyword": "off",
    "no-whitespace-before-property": "error",
    "object-curly-newline": "error",
    "object-curly-spacing": ["error", "always"],
    "object-shorthand": ["error", "always"],
    "one-var": ["error", "never"],
    "prefer-arrow-callback": "warn",
    "prefer-arrow/prefer-arrow-functions": "off",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
      },
    ],
    "prefer-destructuring": "error",
    "prefer-promise-reject-errors": "error",
    // TODO: turn on later
    "quote-props": ["error", "as-needed"],
    radix: "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/jsx-boolean-value": "warn",
    "react/jsx-filename-extension": [
      "error",
      {
        extensions: [".tsx"],
      },
    ],
    "react/jsx-no-bind": "off",
    // TODO: turn on later
    "react/jsx-no-literals": "off",
    // TODO: turn on later
    "react/jsx-no-useless-fragment": "off",
    // TODO: turn on later. To make this work, jsx-no-literals should be also turned on
    "react/jsx-pascal-case": "error",
    "react/no-access-state-in-setstate": "error",
    "react/no-danger": "off",
    // TODO: turn on later
    "react/no-multi-comp": "off",
    "react/no-this-in-sfc": "error",
    "react/prefer-stateless-function": "off",
    // TODO: turn on later
    "rest-spread-spacing": ["error", "never"],
    "semi-spacing": "error",
    "sonarjs/no-small-switch": "off",
    // TODO: turn on later
    "sort-imports": "off",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        anonymous: "always",
        asyncArrow: "always",
        named: "never",
      },
    ],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error",
    "use-isnan": "error",
    "valid-typeof": "off",
  },
};
